/*
 * scorecard
 *
 * inital pass at scorecard API
 *
 * API version: 1.0
 * Contact: mitchell.harvey@arup.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"DeleteCommentsCommentId",
		http.MethodDelete,
		"/comments/:commentId",
		DeleteCommentsCommentId,
	},

	{
		"DeleteMaterialTypesMaterialTypeId",
		http.MethodDelete,
		"/materialTypes/:materialTypeId",
		DeleteMaterialTypesMaterialTypeId,
	},

	{
		"DeleteStoresStoreId",
		http.MethodDelete,
		"/stores/:storeId",
		DeleteStoresStoreId,
	},

	{
		"DeleteUsersUserId",
		http.MethodDelete,
		"/users/:userId",
		DeleteUsersUserId,
	},

	{
		"GetCommentsMaterialInstanceId",
		http.MethodGet,
		"/allMaterialComments/:materialInstanceId",
		GetCommentsMaterialInstanceId,
	},

	{
		"GetEpicMaterials",
		http.MethodGet,
		"/epicMaterials",
		GetEpicMaterials,
	},

	{
		"GetEpicMaterialsEpicMaterialId",
		http.MethodGet,
		"/epicMaterials/:epicMaterialId",
		GetEpicMaterialsEpicMaterialId,
	},

	{
		"GetMaterialInstanceHistoryMaterialInstanceId",
		http.MethodGet,
		"/materialInstanceHistory/:materialInstanceId",
		GetMaterialInstanceHistoryMaterialInstanceId,
	},

	{
		"GetMaterialInstancesStoreId",
		http.MethodGet,
		"/materialInstancesByStore/:storeId",
		GetMaterialInstancesStoreId,
	},

	{
		"GetMaterialTypes",
		http.MethodGet,
		"/materialTypes",
		GetMaterialTypes,
	},

	{
		"GetMaterialTypesMaterialTypeId",
		http.MethodGet,
		"/materialTypes/:materialTypeId",
		GetMaterialTypesMaterialTypeId,
	},

	{
		"GetStores",
		http.MethodGet,
		"/stores",
		GetStores,
	},

	{
		"GetStoresStoreId",
		http.MethodGet,
		"/stores/:storeId",
		GetStoresStoreId,
	},

	{
		"GetUsers",
		http.MethodGet,
		"/users",
		GetUsers,
	},

	{
		"GetUsersUserId",
		http.MethodGet,
		"/users/:userId",
		GetUsersUserId,
	},

	{
		"PostComment",
		http.MethodPost,
		"/comment",
		PostComment,
	},

	{
		"PostMaterialInstance",
		http.MethodPost,
		"/materialInstance",
		PostMaterialInstance,
	},

	{
		"PostMaterialType",
		http.MethodPost,
		"/materialType",
		PostMaterialType,
	},

	{
		"PostStore",
		http.MethodPost,
		"/store",
		PostStore,
	},

	{
		"PostUser",
		http.MethodPost,
		"/user",
		PostUser,
	},

	{
		"PutMaterialInstancesMaterialInstanceId",
		http.MethodPut,
		"/materialInstances/:materialInstanceId",
		PutMaterialInstancesMaterialInstanceId,
	},

	{
		"PutMaterialTypesMaterialTypeId",
		http.MethodPut,
		"/materialTypes/:materialTypeId",
		PutMaterialTypesMaterialTypeId,
	},

	{
		"PutStoresStoreId",
		http.MethodPut,
		"/stores/:storeId",
		PutStoresStoreId,
	},

	{
		"PutUsersUserId",
		http.MethodPut,
		"/users/:userId",
		PutUsersUserId,
	},
}
